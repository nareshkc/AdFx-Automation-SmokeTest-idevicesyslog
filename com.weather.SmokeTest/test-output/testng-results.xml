<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="2" failed="0" total="2" passed="0">
  <reporter-output>
    <line>
      <![CDATA[STEP1]]>
    </line>
  </reporter-output>
  <suite name="Default suite" duration-ms="101649" started-at="2015-10-16T14:51:16Z" finished-at="2015-10-16T14:52:57Z">
    <groups>
    </groups>
    <test name="Default test" duration-ms="101649" started-at="2015-10-16T14:51:16Z" finished-at="2015-10-16T14:52:57Z">
      <class name="com.weather.Testcases.Smoke_Test">
        <test-method status="FAIL" signature="beforeTest()[pri:0, instance:com.weather.Testcases.Smoke_Test@edf4efb]" name="beforeTest" is-config="true" duration-ms="0" started-at="2015-10-16T20:21:16Z" finished-at="2015-10-16T20:21:16Z">
          <exception class="org.openqa.selenium.remote.SessionNotFoundException">
            <message>
              <![CDATA[
Command duration or timeout: 50.89 seconds
Build info: version: '2.47.1', revision: 'unknown', time: '2015-07-30 11:02:44'
System info: host: 'localhost', ip: '127.0.0.1', os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '10.10.1', java.version: '1.8.0_60'
Driver info: io.appium.java_client.ios.IOSDriver]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.remote.SessionNotFoundException: 
Command duration or timeout: 50.89 seconds
Build info: version: '2.47.1', revision: 'unknown', time: '2015-07-30 11:02:44'
System info: host: 'localhost', ip: '127.0.0.1', os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '10.10.1', java.version: '1.8.0_60'
Driver info: io.appium.java_client.ios.IOSDriver
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:422)
	at org.openqa.selenium.remote.ErrorHandler.createThrowable(ErrorHandler.java:206)
	at org.openqa.selenium.remote.ErrorHandler.throwIfResponseFailed(ErrorHandler.java:164)
	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:595)
	at io.appium.java_client.DefaultGenericMobileDriver.execute(DefaultGenericMobileDriver.java:42)
	at io.appium.java_client.AppiumDriver.execute(AppiumDriver.java:1)
	at io.appium.java_client.ios.IOSDriver.execute(IOSDriver.java:1)
	at org.openqa.selenium.remote.RemoteWebDriver.startSession(RemoteWebDriver.java:242)
	at org.openqa.selenium.remote.RemoteWebDriver.<init>(RemoteWebDriver.java:128)
	at org.openqa.selenium.remote.RemoteWebDriver.<init>(RemoteWebDriver.java:141)
	at io.appium.java_client.DefaultGenericMobileDriver.<init>(DefaultGenericMobileDriver.java:37)
	at io.appium.java_client.AppiumDriver.<init>(AppiumDriver.java:160)
	at io.appium.java_client.AppiumDriver.<init>(AppiumDriver.java:168)
	at io.appium.java_client.ios.IOSDriver.<init>(IOSDriver.java:56)
	at com.weather.appium.Capabilities.dcap(Capabilities.java:81)
	at com.weather.Testcases.Smoke_Test.beforeTest(Smoke_Test.java:168)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:517)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:213)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:140)
	at org.testng.TestRunner.beforeRun(TestRunner.java:645)
	at org.testng.TestRunner.run(TestRunner.java:613)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:357)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:352)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:310)
	at org.testng.SuiteRunner.run(SuiteRunner.java:259)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1199)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1124)
	at org.testng.TestNG.run(TestNG.java:1032)
	at org.testng.remote.RemoteTestNG.run(RemoteTestNG.java:111)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:204)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:175)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.remote.SessionNotFoundException -->
          <reporter-output>
            <line>
              <![CDATA[STEP1]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="SKIP" signature="beforeClass()[pri:0, instance:com.weather.Testcases.Smoke_Test@edf4efb]" name="beforeClass" is-config="true" duration-ms="0" started-at="2015-10-16T20:22:57Z" finished-at="2015-10-16T20:22:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="SKIP" signature="FirstRun()[pri:0, instance:com.weather.Testcases.Smoke_Test@edf4efb]" name="FirstRun" duration-ms="1" started-at="2015-10-16T20:22:57Z" finished-at="2015-10-16T20:22:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- FirstRun -->
        <test-method status="SKIP" signature="c334150_pulltoRefresh()[pri:0, instance:com.weather.Testcases.Smoke_Test@edf4efb]" name="c334150_pulltoRefresh" duration-ms="1" started-at="2015-10-16T20:22:57Z" finished-at="2015-10-16T20:22:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- c334150_pulltoRefresh -->
        <test-method status="SKIP" signature="afterTest()[pri:0, instance:com.weather.Testcases.Smoke_Test@edf4efb]" name="afterTest" is-config="true" duration-ms="0" started-at="2015-10-16T20:22:57Z" finished-at="2015-10-16T20:22:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
      </class> <!-- com.weather.Testcases.Smoke_Test -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
